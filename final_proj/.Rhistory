library(shiny)
library(dplyr)
library(ggplot2)
# load data
shoot <- read.csv("fatal-police-shootings-data.csv")
View(shoot)
# manipulate data
shoot_map <- shoot %>% select(id, armed, state, signs_of_mental_illness)
View(shoot_map)
library(maps)
fips_data <- read.csv("https://raw.githubusercontent.com/kjhealy/fips-codes/master/state_fips_master.csv")
View(fips_data)
fips_data <- fips_data %>% select(state_abbr, fips)
View(fips_data)
state_shapes <- map_data("state") %>%
# load county boundary data (package "maps")
unite(polyname, region, subregion, sep = ",") %>%
# put the polygon name in the same form as in county.fips
left_join(state.fips, by = "polyname")
library(maps)
state_shapes <- map_data("state") %>%
# load county boundary data (package "maps")
unite(polyname, region, subregion, sep = ",") %>%
# put the polygon name in the same form as in county.fips
left_join(state.fips, by = "polyname")
library(tidyverse)
state_shapes <- map_data("state") %>%
# load county boundary data (package "maps")
unite(polyname, region, subregion, sep = ",") %>%
# put the polygon name in the same form as in county.fips
left_join(state.fips, by = "polyname")
View(state_shapes)
us_map <- left_join(shoot_map, state_shapes, by = "fips")
# manipulate data
shoot_map <- shoot %>%
select(id, armed, state, signs_of_mental_illness) %>%
add_column(fips = NA)
shoot_map <- lef_join(shoot_map, fips_data, by = "fips")
shoot_map <- left_join(shoot_map, fips_data, by = "fips")
fips_data <- fips_data %>% select(state_abbr, fips) %>%
rename(
state_abbr = state
)
shoot_map <- left_join(shoot_map, fips_data, by = "state")
fips_data <- fips_data %>% select(state_abbr, fips) %>%
rename(
state_abbr = state
)
fips_data <- fips_data %>% select(state_abbr, fips) %>%
rename(
state = state_abbr
)
shoot_map <- left_join(shoot_map, fips_data, by = "state")
shoot_map <- shoot_map[-c(fips.x, state_abbr)]
shoot_map <- shoot_map[-c(state_abbr)]
shoot_map$fips.x <- NULL
shoot_map$state_abbr <- NULL
View(state_shapes)
state_shapes <- map_data("state")
View(state_shapes)
state_shapes <- map_data("state") %>%
rename(
state = region
)
state_shapes <- left_join(state_shapes, fips_data, by = "state")
View(fips_data)
state_abb_data <- read.csv("https://gist.githubusercontent.com/mshafrir/2646763/raw/8b0dbb93521f5d6889502305335104218454c2bf/states_hash.json")
View(state_abb_data)
state_abb_data <- read.delim("https://gist.githubusercontent.com/mshafrir/2646763/raw/8b0dbb93521f5d6889502305335104218454c2bf/states_hash.json")
View(state_abb_data)
state_abb_data <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv")
View(state_abb_data)
state_shapes$state <- tolower(row.names(state))
state_shapes$state <- tolower(row.names(state_shapes))
# load data
shoot <- read.csv("fatal-police-shootings-data.csv")
## provide reference to this data
fips_data <- read.csv("https://raw.githubusercontent.com/kjhealy/fips-codes/master/state_fips_master.csv")
state_abb_data <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv")
# manipulate data
shoot_map <- shoot %>%
select(id, armed, state, signs_of_mental_illness) %>%
add_column(fips = NA)
fips_data <- fips_data %>% select(state_abbr, fips) %>%
rename(
state = state_abbr
)
shoot_map <- left_join(shoot_map, fips_data, by = "state")
shoot_map$fips.x <- NULL
shoot_map$state_abbr <- NULL
state_shapes <- map_data("state") %>%
rename(
state = region
)
state_shapes$state <- toupper(row.names(state_shapes))
# load data
shoot <- read.csv("fatal-police-shootings-data.csv")
## provide reference to this data
fips_data <- read.csv("https://raw.githubusercontent.com/kjhealy/fips-codes/master/state_fips_master.csv")
state_abb_data <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv")
# manipulate data
shoot_map <- shoot %>%
select(id, armed, state, signs_of_mental_illness) %>%
add_column(fips = NA)
fips_data <- fips_data %>% select(state_abbr, fips) %>%
rename(
state = state_abbr
)
shoot_map <- left_join(shoot_map, fips_data, by = "state")
shoot_map$fips.x <- NULL
shoot_map$state_abbr <- NULL
state_shapes <- map_data("state") %>%
rename(
state = region
)
state_abb_data$State <- tolower(row.names(state_shapes))
View(state_abb_data)
state_abb_data$State <- tolower(row.names(state_shapes$State))
state_abb_data$State <- tolower(row.names(state_abb_data$State))
state_abb_data$State_lower <- tolower(row.names(state_abb_data$State))
# load data
shoot <- read.csv("fatal-police-shootings-data.csv")
## provide reference to this data
fips_data <- read.csv("https://raw.githubusercontent.com/kjhealy/fips-codes/master/state_fips_master.csv")
state_abb_data <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv")
# manipulate data
shoot_map <- shoot %>%
select(id, armed, state, signs_of_mental_illness) %>%
add_column(fips = NA)
View(shoot_map)
View(fips_data)
fips_data <- fips_data %>% select(state_abbr, fips)
# load data
shoot <- read.csv("fatal-police-shootings-data.csv")
# manipulate data
shoot_map <- shoot %>%
select(id, armed, state, signs_of_mental_illness)
shoot_map <- left_join(shoot_map, fips_data, by = c("state" = "state_abbr"))
state_shapes <- map_data("state")
View(state_shapes)
View(state_abb_data)
state_abb_data$State <- tolower(state_abb_data$State)
state_shapes <- left_join(state_shapes, state_abb_data, by = c("region" = "State"))
# manipulate data
shoot_map_data <- shoot %>%
select(id, armed, state, signs_of_mental_illness)
# add fips data to shooting data
fips_data <- fips_data %>% select(state_abbr, fips)
shoot_map_data <- left_join(shoot_map_data, fips_data, by = c("state" = "state_abbr"))
# create state data
state_shapes <- map_data("state")
state_shapes <- left_join(state_shapes, state_abb_data, by = c("region" = "State"))
View(shoot_map_data)
# attach state data to shooting data
shoot_map <- left_join(state_shapes, shoot_map_data, by = c("state" = "Abbreviation"))
# attach state data to shooting data
shoot_map <- left_join(state_shapes, shoot_map_data, by = c("Abbreviation" = "state"))
View(shoot_map)
# plot map
shoot_map_plot <- ggplot(shoot_map. aes(long, lat, group = group)) +
geom_polygon() + coord_quickmap()
# plot map
shoot_map_plot <- ggplot(shoot_map. aes(long, lat, group = group)) +
geom_polygon() + coord_quickmap()
# plot map
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon() + coord_quickmap()
View(shoot_map_plot)
shoot_map_plot
View(shoot)
shoot_count <- shoot_map %>%
group_by(Abbreviation)
View(shoot_count)
shoot_count <- shoot_map %>%
group_by(Abbreviation) %>%
summarize(count = n())
# attach counts to shooting and map data
shoot_map <- left_join(shoot_map, shoot_count, by = "Abbreviation")
# plot map
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) + coord_quickmap()
shoot_map_plot
# plot map
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) + coord_quickmap() +
labs(
title = "Count of Fatal Police Shootings by US State"
)
shoot_map_plot
data <- read.csv("fatal-police-shootings-data.csv")
View(data)
## manipulate data
shoot_map_data <- data %>%
select(id, armed, state, signs_of_mental_illness)
## create counts of shootings by state
shoot_count <- shoot_map %>%
group_by(Abbreviation) %>%
summarize(count = n())
## add fips data to shooting data
fips_data <- fips_data %>% select(state_abbr, fips)
shoot_map_data <- left_join(shoot_map_data, fips_data, by = c("state" = "state_abbr"))
## add fips data to shooting data
fips_data <- fips_data %>% select(state_abbr, fips)
shoot_map_data <- left_join(shoot_map_data, fips_data, by = c("state" = "state_abbr"))
## create state data
state_shapes <- map_data("state")
state_shapes <- left_join(state_shapes, state_abb_data, by = c("region" = "State"))
## attach state data to shooting data
shoot_map <- left_join(state_shapes, shoot_map_data, by = c("Abbreviation" = "state"))
## attach counts to shooting and map data
shoot_map <- left_join(shoot_map, shoot_count, by = "Abbreviation")
## plot map
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) + coord_quickmap() +
labs(
title = "Count of Fatal Police Shootings by US State"
)
shoot_map_plot
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
data <- read.csv("fatal-police-shootings-data.csv")
by_race <- data %>%
group_by(race, gender) %>%
summarise(shootings = n())
server <- function(input, output) {
gender_name <- reactive({
if(is.null(input$gender)) {
by_race
}  else {
by_race %>%
filter(gender %in% input$gender)
}
})
output$race_bar <- renderPlot({
ggplot(gender_name(), aes(race, shootings )) +
geom_col(col = "Black", fill = input$Color) +
labs (
x = "Race",
y = "Number of Shootings",
title = "Number of Shootings by Race and Gender") +
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5))
})
output$message <- renderText ({
high_race <- by_race %>%
filter(gender == input$gender) %>%
arrange(desc(shootings))
paste0(high_race$race[1] , input$gender , " have the highest amount of fatal police shootings with ", high_race$shootings[1], " shootings. ")
})
}
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("Police Shootings in the USA Data"),
sidebarLayout(
sidebarPanel(
uiOutput("gender"),
selectInput(inputId = "gender", "Gender:",
c("Female" = "F",
"Male" = "M")),
radioButtons(inputId = "Color", label = "Plot Color",
c("Red", "Blue", "Gray", "Black"),
selected = "Black"
)
),
mainPanel(
plotOutput("race_bar"),
textOutput("message")
)
)
)
# Run the application
shinyApp(ui = ui, server = server)
