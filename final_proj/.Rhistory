<<<<<<< HEAD
data <- read.csv("fatal-police-shootings-data.csv")
by_gender <- data %>%
group_by(race, gender) %>%
summarise(appearances = n())
library(shiny)
library(dplyr)
library(ggplot2)
library(maps)
by_gender <- data %>%
group_by(race, gender) %>%
summarise(appearances = n())
by_race <- data %>%
group_by(race, gender) %>%
summarise(appearances = n())
rm(by_gender)
rm(by_race)
by_race <- data %>%
group_by(race, gender) %>%
summarise(shootings = n())
View(data)
runApp()
View(by_race)
runApp()
runApp()
runApp()
runApp()
fips_data <- read.csv("https://raw.githubusercontent.com/kjhealy/fips-codes/master/state_fips_master.csv")
state_abb_data <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv")
state_abb_data$State <- tolower(state_abb_data$State)
shoot_map_data <- data %>%
select(id, armed, state, signs_of_mental_illness)
shoot_count <- shoot_map %>%
group_by(Abbreviation) %>%
summarize(count = n())
shoot_count <- shoot_map_data %>%
group_by(Abbreviation) %>%
summarize(count = n())
fips_data <- fips_data %>% select(state_abbr, fips)
shoot_map_data <- left_join(shoot_map_data, fips_data, by = c("state" = "state_abbr"))
fips_data <- fips_data %>% select(state_abbr, fips)
shoot_map_data <- left_join(shoot_map_data, fips_data, by = c("state" = "state_abbr"))
state_shapes <- map_data("state")
state_shapes <- left_join(state_shapes, state_abb_data, by = c("region" = "State"))
shoot_map <- left_join(state_shapes, shoot_map_data, by = c("Abbreviation" = "state"))
shoot_map <- left_join(shoot_map, shoot_count, by = "Abbreviation")
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) + coord_quickmap() +
=======
title = "Number of Shootings by Race and Gender") +
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5))
})
output$message <- renderText ({
high_race <- by_race %>%
filter(gender == input$gender) %>%
arrange(desc(shootings))
paste0("The race ",  high_race$race[1],  " and the gender ",  input$gender , " have the highest amount of fatal police shootings with ", high_race$shootings[1], " shootings. ")
})
output$descripation_one <- renderText({
print("This bar graph helps us look at the disparities of fatal police shootings among race. The user
can then adjust it to further look at the differences between different races and different genders. This allows us to
understand and look at the patterns of who is being fatally shot most by police.")
})
##################End Mary-Mae Page
###################AmyPage
output$map <- renderPlot({
# subset <- prop_ill_dat %>%
#filter(armed %in% input$armed)
shoot_map_plot <- ggplot(prop_ill_dat, aes(long, lat, group = group)) +
geom_polygon(aes(fill = prop_true)) + coord_quickmap() +
>>>>>>> 97b0a914a4326ad6ea78e098ef2f83414a1961d2
labs(
title = "Count of Fatal Police Shootings by US State"
)
View(shoot_map_data)
runApp()
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) + coord_quickmap() +
labs(
title = "Count of Fatal Police Shootings by US State"
)
shoot_map_plot
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(maps)
shoot_count <- shoot_map_data %>%
group_by(Abbreviation) %>%
summarize(count = n())
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) + coord_quickmap() +
labs(
title = "Count of Fatal Police Shootings by US State"
)
shoot_map_plot
View(data)
shoot_count <- shoot_map_data %>%
group_by(Abbreviation) %>%
summarize(count = n())
shoot_count <- shoot_map %>%
group_by(Abbreviation) %>%
summarize(count = n())
runApp()
output$map <- renderPlot({
#subset <- shoot_map %>%
#filter(count)
shoot_map_plot <- ggplot(shoot_map, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) + coord_quickmap() +
labs(
title = "Count of Fatal Police Shootings by US State"
)
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(by_race)
runApp()
runApp()
armed_count <- shoot_map %>%
group_by(armed) %>%
summarize(count = n()) %>% arrange(desc(count))
armed_count <- armed_count[-4,]
View(armed_count)
shoot_count_highest <- shoot_count %>%
arrange(desc(count))
by_race_high <-  by_race %>%
arrange(desc(count))
by_race_high <-  by_race %>%
arrange(desc(shootings))
View(by_race_high)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Desktop/INFO 201/FINAL/INFO-201-Final-Project/final_proj/app.R')
source('~/Desktop/INFO 201/FINAL/INFO-201-Final-Project/final_proj/app.R')
source('~/Desktop/INFO 201/FINAL/INFO-201-Final-Project/final_proj/app.R')
runApp()
runApp()
runApp()
runApp()
runApp()
print("In our next page, we showed a bar graph that showed the number of fatal shootings spiliting up by race. This showed us that in this data, the most people
being shot were the ", by_race_high$race[1], " race and ", by_race_high$gender[1], " gender with ", by_race_high$shootings[1],
" shootings. This number is closely followed by Black Males with ", by_race_high$shootings[2], " shootings. This shows us
that Males are being shot more than females and in this particular data White Males more than Blakc Males. In our last page we
created a bar graph that depicted that manner of death.")
print("This data as a whole I believe was aliry unbiased. It was giving numbers and statistics which were not pulled out of thin air. The major issue that we had with this
data is that there were many catergories that did not have a variable in the box, like empty parts in the data. This made it
a little more diffcult when we constructed charts.")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
manner_death <- data %>%
group_by(manner_of_death, gender) %>%
summarise(occurances = n())
output$mannerBar <- renderPlot({
ggplot(name_gender(), aes(x= manner_of_death, occurances ))+
geom_bar(col = "Red")+
labs(title= "Manner of Death Bar Graph", x= "Manner of Death", y= "Occurrances")
})
output$race_bar <- renderPlot({
ggplot(gender_name(), aes(race, shootings )) +
geom_col(col = "Black", fill = input$Color) +
labs (
x = "Race",
y = "Number of Shootings",
title = "Number of Shootings by Race and Gender") +
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5))
})
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
manner_death <- data %>%
group_by(manner_of_death, race) %>%
summarise(occurances = n())
View(by_race)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(manner_death)
high_gender <- manner_death %>%
filter(race == input$race) %>%
arrange(desc(occurances))
high_race <- by_race %>%
filter(gender == input$gender) %>%
arrange(desc(shootings))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
<<<<<<< HEAD
shiny::runApp()
runApp()
runApp()
View(data)
subset(data, select = -
c(name,date,age, threat_level,flee, body_camera ))
subset(data, select = -
c(name,date,age, threat_level,flee, body_camera,city ))
rm(data)
data <- read.csv("fatal-police-shootings-data.csv.zip")
subset(data, select = -
c(name,date,age, threat_level,flee, body_camera,city ))
data <- read.csv("fatal-police-shootings-data.csv.zip")
data <- read.csv("fatal-police-shootings-data.csv")
rm(data)
data <- read.csv("fatal-police-shootings-data.csv.bz2")
subset(data, select = -
c(name,date,age, threat_level,flee, body_camera,city ))
subset(state_shapes, select = -
c(subregion, order))
old_data <- read.csv("fatal-police-shootings-data.csv.bz2")
data <- subset(data, select = -
c(name,date,age, threat_level,flee, body_camera,city ))
by_race_counts <- data %>%
group_by(race) %>%
summarise(shootings = n())
by_race <- left_join(data, by_race_counts, by = "race")
rm(old_data)
runApp()
runApp()
rm(by_race_counts)
by_race <- data %>%
group_by(race) %>%
summarise(shootings = n())
runApp()
rm(data)
data <- read.csv("fatal-police-shootings-data.csv.bz2")
runApp()
by_race <- data %>%
group_by(race, gender) %>%
summarise(shootings = n())
runApp()
runApp()
=======
=======
output$message <- renderText ({
high_race <- by_race %>%
filter(gender == input$gender) %>%
arrange(desc(shootings))
paste0("The race ",  high_race$race[1],  " and the gender ",  input$gender , " have the highest amount of fatal police shootings with ", high_race$shootings[1], " shootings. ")
})
output$descripation_one <- renderText({
print("This bar graph helps us look at the disparities of fatal police shootings among race. The user
can then adjust it to further look at the differences between different races and different genders. This allows us to
understand and look at the patterns of who is being fatally shot most by police.")
})
##################End Mary-Mae Page
###################AmyPage
output$map <- renderPlot({
# subset <- prop_ill_dat %>%
#filter(armed %in% input$armed)
shoot_map_plot <- ggplot(prop_ill_dat, aes(long, lat, group = group)) +
geom_polygon(aes(fill = prop_true)) + coord_quickmap() +
labs(
title = "Proportion of Individuals Fatally Shot and Mentally-Ill, by State"
) +  scale_fill_gradient2("Proportion of Total Shot")
shoot_map_plot
})
output$map_descript <- renderText({
print("This map plots the proportion of individuals fatally shot by police that were mentally ill.
States colored in with a lighter shade of purple have higher proportions than states colored
with a darker purple The plot suggests that states with the highest proportions of mentally ill
victims of police shootings were Wyoming, South Dakota, and Vermont. The states with the lowest
proportions were Kentucky, Maine, and Montana. Overall, the map suggests that states in the
southern parts of the US have higher proportions of mentally ill individuals shot by policemen
than northern states.")
})
###################End Amy Page
##################AshleyPage
race_name <- reactive({
if(is.null(input$race)) {
manner_death
}  else {
manner_death %>%
filter(race %in% input$race)
}
})
output$mannerBar <- renderPlot({
ggplot(race_name(), aes(manner_of_death, occurances ))+
geom_col(col = "Red")+
labs(title= "Manner of Death Bar Graph", x= "Manner of Death", y= "Occurrances")
})
output$mannercomment <- renderText({
high_gender <- manner_death %>%
filter(race == input$race) %>%
arrange(desc(occurances))
paste0("The race ",  input$race , " had ", high_gender$occurances[1]  ," ",  high_gender$manner_of_death[1] , " vs ", high_gender$occurances[2]  , " ",  high_gender$manner_of_death[2])
})
###################End Ashley Page
#############conclusion
output$conclusion1 <- renderText({
paste0("Throughout our project, we aimed to examine aspects of the data that would provide insight to the characteristics
of the victims of police shootings. The first panel displays a USmap which is colored according to the proportion of individuals
who were fatally shot by policemen and were mentally ill (out of all individuals shot). This map gave evidence to suggest
states in the south had higher proportions of mentally ill individuals who were victimized, while states in the north had
a smaller proportion. This evidence suggests that there is a disproportionate approach as to how US policing systems issue order
when confronting an individual with a mental illness. This suggests that nationwide training should be instilled in police forces
to detail how to respond to calls involving mentally ill individuals. It is then that we can hope to reduce these numbers.")
})
output$conclusion2 <- renderText({
paste0("In our next page, we showed a bar graph that showed the number of fatal shootings spiliting up by race. This showed us that in this data, the most people
being shot were the ", by_race_high$race[1], " race and ", by_race_high$gender[1], " gender with ", by_race_high$shootings[1],
" shootings. This number is closely followed by Black Males with ", by_race_high$shootings[2], " shootings. This shows us
that Males are being shot more than females and in this particular data White Males more than Blakc Males. In our last page we
created a bar graph that depicted that manner of death.")
})
output$conclusion3 <- renderText({
paste0("All of this data is very important because it allows us to investigate the Police force and think about the manner of fatal shootings. Are they always justified? With these
numbers we can see that although more people are armed than unarmed, there is still an alarming number of unarmed
individuals being shot. Furthermore we can start investigating deeper questions such as, who gets to decides if a person
lives or dies? Should the Police person have the ability to be the judge, jury and executor?")
})
output$conclusion4 <- renderText({
paste0("This data as a whole we believe was fairly unbiased. It was giving numbers and statistics which were not pulled out of thin air. The major issue that we had with this
data is that there were many catergories that did not have a variable in the box, like empty parts in the data. This made it
a little more diffcult when we constructed charts.
")
})
output$conclusion5 <- renderText({
paste0("What's next with this project? Investigate another data set that shows
fatal Police shooting but during a different time period. We could compare and contrast the data and look how fatal Police shootings
have changed over time.")
})
}
# Define UI for application that draws a histogram
ui <- fluidPage(
tabsetPanel(type = "tabs",
##Intro Page
tabPanel("Introduction",
h2("Introduction"),
mainPanel(
textOutput("intro")
)
),
##AMy Page
tabPanel("Tab 2",
h2("Map of Mentally-Ill Victims"),
mainPanel(
plotOutput("map"),
textOutput("map_descript")
)
),
###Mary-Mae Page
tabPanel("Tab 3",
h2("Victims by Race and Gender"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "gender", "Select Gender:",
c("Female" = "F",
"Male" = "M")),
radioButtons(inputId = "Color", label = "Select Bar Color",
c("Red", "Blue", "Gray", "Black"),
selected = "Black"
)
),
mainPanel(
plotOutput("race_bar"),
textOutput("message"),
textOutput("descripation_one")
)
)
),
####Ashley Page
tabPanel("Tab 4",
h2("Victim Manner of Death by Race"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "race", "Select Race:",
c("Black" = "B",
"White" = "W",
"Asian" = "A",
"Other" = "O",
"Hispanic" = "H",
"Native American" = "N"))
),
mainPanel(
plotOutput("mannerBar"),
textOutput("mannercomment")
)
)
),
#####Conclusion
tabPanel("Conclusion",
h2("Conclusion"),
mainPanel(
textOutput("conclusion1"),
textOutput("conclusion2"),
textOutput("conclusion3"),
textOutput("conclusion4"),
textOutput("conclusion5")
)
)
)
)
shinyApp(ui = ui , server = server)
shinyApp(ui = ui , server = server)
<<<<<<< HEAD
shinyApp(ui = ui , server = server)
shiny::runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='achew20', token='21982ED8EEDBF16EA97789A23E202664', secret='MzL4TFCFiHa5nV0WdNnfcYaiZ+SojmkRLF7tBID0')
View(by_race)
runApp()
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(maps)
library(rsconnect)
data <- read.csv("fatal-police-shootings-data.csv")
by_race <- data %>%
group_by(race, gender) %>%
summarise(shootings = n())
by_race_counts <- data %>%
group_by(race) %>%
summarise(shootings = n())
by_race <- left_join(data, by_race_counts, by = "gender")
View(by_race)
View(by_race_counts)
by_race <- left_join(data, by_race_counts, by = "race")
View(by_race)
runApp()
shinyApp(ui = ui , server = server)
runApp()
library(rsconnect)
runApp()
runApp()
runApp()
=======
>>>>>>> b3ba2d31871481a048162075810576cf5db958ed
>>>>>>> 284c179e7ca5f951f56d4efe2e667b7ebcf25fca
>>>>>>> 97b0a914a4326ad6ea78e098ef2f83414a1961d2
